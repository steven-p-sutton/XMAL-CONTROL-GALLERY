<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="AppUIBasics.ControlPages.ButtonPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:AppUIBasics"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
      mc:Ignorable="d">
    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="A simple Button with text content.">
            <local:ControlExample.Example>
                <Button x:Name="Button1" Content="Standard XAML button" Click="Button_Click"
                    IsEnabled="{x:Bind DisableButton1.IsChecked.Value.Equals(x:False), Mode=OneWay}" />
            </local:ControlExample.Example>
            <local:ControlExample.Output>
                <TextBlock x:Name="Control1Output" FontFamily="Global User Interface"/>
            </local:ControlExample.Output>
            <local:ControlExample.Options>
                <StackPanel>
                    <CheckBox x:Name="DisableButton1" Content="Disable button" />
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String>
                    &lt;Button Content="Standard XAML button" Click="Button_Click" $(IsEnabled)/&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                    <local:ControlExampleSubstitution Key="IsEnabled" IsEnabled="{x:Bind DisableButton1.IsChecked.Value, Mode=OneWay}"
                                                  Value= "IsEnabled=&quot;False&quot; "/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        <local:ControlExample x:Name="Example2" HeaderText="A Button with graphical content.">
            <local:ControlExample.Example>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="Button2" Click="Button_Click" Width="50" Height="50" Background="Transparent" AutomationProperties.Name="Pie">
                        <Image Source="/Assets/Slices.png" AutomationProperties.Name="Slice"/>
                    </Button>
                </StackPanel>
            </local:ControlExample.Example>
            <local:ControlExample.Output>
                <TextBlock x:Name="Control2Output"/>
            </local:ControlExample.Output>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Button Content="Button" Click="Button_Click" AutomationProperties.Name="Pie"&gt;
    &lt;Image Source="/Assets/Slices.png" AutomationProperties.Name="Slice"/&gt;
&lt;/Button&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        <local:ControlExample HeaderText="Reveal style applied to Button.">
            <local:ControlExample.Example>
                <Button Style="{StaticResource ButtonRevealStyle}" Content="Reveal style button"/>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String >
                    &lt;Button Style="{StaticResource ButtonRevealStyle}" Content="Reveal style button" /&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        <local:ControlExample HeaderText="Accent style applied to Button.">
            <local:ControlExample.Example>
                <Button Style="{StaticResource AccentButtonStyle}" Content="Accent style button"/>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String >
                    &lt;Button Style="{StaticResource AccentButtonStyle}" Content="Accent style button" /&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        <local:ControlExample x:Name="Example3" HeaderText="Custom button appearance" XamlSource="Buttons/Button/CustomButtonStyle.txt">
            <local:ControlExample.Example>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="Button3" AutomationProperties.Name="Custom appearance" Click="Button_Click" 
                            contract7Present:CornerRadius="10" Padding="4,-3,4,-3" BorderThickness="1" FontWeight="Bold">
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Default">
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBackground">
                                            <GradientStop Color="#bffa7765" Offset="0.0"/>
                                            <GradientStop Color="#bfd5407a" Offset="1.0"/>
                                        </LinearGradientBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBorderBrush">
                                            <GradientStop Color="White" Offset="0.0"/>
                                            <GradientStop Color="Purple" Offset="1.0"/>
                                        </LinearGradientBrush>

                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBackgroundPointerOver">
                                            <GradientStop Color="#bfd5407a" Offset="0.0"/>
                                            <GradientStop Color="#bffa7765" Offset="1.0"/>
                                        </LinearGradientBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBorderBrushPointerOver">
                                            <GradientStop Color="Purple" Offset="0.0"/>
                                            <GradientStop Color="White" Offset="1.0"/>
                                        </LinearGradientBrush>

                                        <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPressed" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#bfd5407a"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Dark">
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBackground">
                                            <GradientStop Color="#bf425ff4" Offset="0.0"/>
                                            <GradientStop Color="#bf8737dd" Offset="1.0"/>
                                        </LinearGradientBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBorderBrush">
                                            <GradientStop Color="White" Offset="0.0"/>
                                            <GradientStop Color="#bfdd378c" Offset="1.0"/>
                                        </LinearGradientBrush>

                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBackgroundPointerOver">
                                            <GradientStop Color="#bf8737dd" Offset="0.0"/>
                                            <GradientStop Color="#bf425ff4" Offset="1.0"/>
                                        </LinearGradientBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBorderBrushPointerOver">
                                            <GradientStop Color="#bfdd378c" Offset="0.0"/>
                                            <GradientStop Color="White" Offset="1.0"/>
                                        </LinearGradientBrush>

                                        <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPressed" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#bf8737dd"/>
                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>

                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE10B;" Margin="0,10,0,10" FontSize="15" FontWeight="{x:Bind FontWeight}"/>
                            <TextBlock Text="Custom Button Appearance" Margin="10, 7, 0, 0"/>
                        </StackPanel>
                    </Button>

                    <TextBlock x:Name="Control3Output" Margin="8,0,0,0" VerticalAlignment="Center" />
                </StackPanel>
            </local:ControlExample.Example>
        </local:ControlExample>
    </StackPanel>
</Page>
